@startuml
control Engine

Engine -> FileCopyHero

Engine -> ConfigReader
Engine -> MemoryFileSystem
Engine -> Window: init / show
Window --> Engine: start main thread

Engine -> FileCopyHero: run threaded
Engine -> MemoryFileSystem: run once

== New Save File ==

FileCopyHero -> Engine: just inform
Engine -> Window: console log

== Close ==

Window -> Engine: close
Engine -> FileCopyHero: save, because of shutdown
Engine -> MemoryFileSystem: unmount ram-drive
Engine -> FileCopyHero: copy back to original save

== RAM-Drive ==

Engine -> MemoryFileSystem: mount
MemoryFileSystem -> Engine: was mounted
Engine --> FileCopyHero: inform about new RAM-Drive
FileCopyHero -> FileCopyHero: symlink logik (backup)
FileCopyHero -> Engine: done

note over FileCopyHero
Disable Ram-Drive
end note
Window -> Engine: Disable Ram-Drive
Engine -> FileCopyHero: Pause Observer
Engine -> MemoryFileSystem: Disable RAM-Drive
MemoryFileSystem -> Engine: Ram-Drive is Disabled
Engine -> FileCopyHero: Unpause Observer
note over FileCopyHero
Enable Ram-Drive
end note
Window -> Engine: Enable Ram-Drive
Engine -> FileCopyHero: Pause Observer
Engine -> MemoryFileSystem: Enable RAM-Drive
Engine -> MemoryFileSystem: Create Symlink
MemoryFileSystem --> Engine: Ram-Drive is Enabled
Engine -> FileCopyHero: Unpause Observer

== Observer ==
Window -> Engine: set_observer_state(True)
Engine -> FileCopyHero: is_running=True

Window -> Engine: set_observer_state(False)
Engine -> FileCopyHero: is_running=False

@enduml